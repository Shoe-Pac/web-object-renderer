# version: 2.1

# orbs:
#   nx: nrwl/nx@1.6.2

# jobs:
#   main:
#     docker:
#       - image: cimg/node:lts-browsers
#     steps:
#       - checkout

#       - run:
#           name: Install PNPM
#           command: npm install --prefix=$HOME/.local -g pnpm@8

#       # This enables task distribution via Nx Cloud
#       # Run this command as early as possible, before dependencies are installed
#       # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
#       # Uncomment this line to enable task distribution
#       # - run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

#       - run: pnpm install --frozen-lockfile
#       - run: pnpm exec playwright install --with-deps
#       - nx/set-shas:
#           main-branch-name: 'main'

#       # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
#       # - run: pnpm exec nx-cloud record -- echo Hello World
#       # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
#       # When you enable task distribution, run the e2e-ci task instead of e2e
#       - run: pnpm exec nx affected -t lint test build
#       - run:
#           name: Run Playwright tests
#           command: pnpm nx run frontend-e2e:e2e --configuration=ci
#       # - run:
#       #     name: Run affected Playwright tests
#       #     command: pnpm exec nx affected -t e2e --files=apps/frontend-e2e/**


# workflows:
#   version: 2

#   ci:
#     jobs:
#       - main

version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:20.8

jobs:
  install:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install dependencies
          command: pnpm install
      - save_cache:
          key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules

  test:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Run frontend tests
          command: pnpm exec nx run frontend:test
      - run:
          name: Run backend tests
          command: pnpm exec nx run backend:test
      - run:
          name: Run Playwright E2E tests
          command: pnpm exec nx run frontend-e2e:e2e || (mkdir -p playwright-report && mv frontend-e2e/playwright-report/* playwright-report/ && exit 1) 
      - store_artifacts:
          path: playwright-report
          destination: playwright-report


  deploy-frontend:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Build frontend
          command: pnpm exec nx build frontend
      - run:
          name: Deploy to Render
          command: curl -X POST $RENDER_DEPLOY_HOOK

  deploy-backend:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Build backend
          command: pnpm exec nx build backend
      - run:
          name: Deploy backend to Render
          command: curl -X POST $RENDER_BACKEND_DEPLOY_HOOK


workflows:
  version: 2
  ci-cd:
    jobs:
      - install
      - test:
          requires:
            - install
      - deploy-frontend:
          requires:
            - test
          filters:
            branches:
              only: main
      - deploy-backend:
                requires:
                  - test
                filters:
                  branches:
                    only: main