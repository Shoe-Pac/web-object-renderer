version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:20.8

jobs:
  install:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install dependencies
          command: pnpm install
      - save_cache:
          key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules

  test:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install dependencies
          command: pnpm install --frozen-lockfile
      - run:
          name: Run Playwright E2E tests
          command: npx playwright test apps/frontend-e2e/src --config=apps/frontend-e2e/playwright.config.ts
      - store_artifacts:
          path: playwright-report
          destination: playwright-report

  deploy-frontend:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Build frontend
          command: pnpm exec nx build frontend
      - run:
          name: Deploy frontend to Render
          command: curl -X POST https://api.render.com/deploy/srv-cvm0khm3jp1c738rqgm0?key=l3rweXFRhI4

  deploy-backend:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Build backend
          command: pnpm exec nx build backend
      - run:
          name: Deploy backend to Render
          command: curl -X POST https://api.render.com/deploy/srv-cvm56d3e5dus73afgv1g?key=tqkNKomp9x0

workflows:
  version: 2
  ci-cd:
    jobs:
      - install
      - test:
          requires:
            - install
      - deploy-frontend:
          requires:
            - test
          filters:
            branches:
              only: main
      - deploy-backend:
          requires:
            - test
          filters:
            branches:
              only: main
